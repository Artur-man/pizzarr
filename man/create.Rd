% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/creation.R
\name{create}
\alias{create}
\title{Create an array.}
\usage{
create(
  shape,
  chunks = TRUE,
  dtype = NA,
  compressor = NA,
  fill_value = 0,
  order = "C",
  store = NA,
  synchronizer = NA,
  overwrite = FALSE,
  path = NA,
  chunk_store = NA,
  filters = NA,
  cache_metadata = TRUE,
  cache_attrs = TRUE,
  read_only = FALSE,
  object_codec = NA,
  dimension_separator = NA
)
}
\arguments{
\item{shape}{Array shape.}

\item{chunks}{Chunk shape. If TRUE, will be guessed from \code{shape} and \code{dtype}. If FALSE, a single chunk will be used for the whole array. If an int, the chunk size in each dimension will be given by the value of chunks. By default, TRUE.}

\item{dtype}{Data type.}

\item{compressor}{The primary compressor.}

\item{fill_value}{Default value to use for uninitialized portions of the array.}

\item{order}{Memory layout to be used within each chunk.}

\item{store}{Store or path to directory in file system.}

\item{synchronizer}{Array synchronizer. Optional.}

\item{overwrite}{If TRUE, delete all pre-existing data in \code{store} at \code{path} before creating the array.}

\item{path}{Path under which the array is stored.}

\item{chunk_store}{Separate storage for chunks. If not provided, \code{store} will be used for storage of both chunks and metadata.}

\item{filters}{Sequence of filters to use to encode chunk data prior to compression.}

\item{cache_metadata}{If TRUE, array configuration metadata will be cached for the lifetime of the object. If FALSE, array metadata will be reloaded prior to all data access and modification operations.}

\item{cache_attrs}{If TRUE, user attributes will be cached for attribute read operations. If FALSE, user attributes are reloaded from the store prior to all attribute read operations.}

\item{read_only}{If TRUE, array is protected against modification.}

\item{object_codec}{A codec to encode object arrays, only needed if \code{dtype} is object.}

\item{dimension_separator}{Separator placed between the dimensions of a chunk.}
}
\value{
Returns a pizzarr \code{Array} object.
}
\description{
Create an array.
}
