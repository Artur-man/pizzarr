% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/array.R
\docType{class}
\name{Array}
\alias{Array}
\title{Array Class}
\value{
A subset of the array, as a NestedArray instance.
Set a subset of the array.
}
\description{
Instantiate an array from an initialized store.
Reference: https://github.com/zarr-developers/zarr-python/blob/5dd4a0/zarr/core.py#L51
}
\details{
The Zarr Array class.
}
\keyword{internal}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{store}}{Array store, already initialized.}

\item{\code{chunk_store}}{Separate storage for chunks. If not provided, \code{store} will be used for storage of both chunks and metadata.}

\item{\code{path}}{Storage path. String, optional.}

\item{\code{read_only}}{True if array should be protected against modification.}

\item{\code{synchronizer}}{Array synchronizer. Object, optional.}

\item{\code{cache_metadata}}{If True (default), array configuration metadata will be cached. If False, metadata will be reloaded prior to all data access and modification.}

\item{\code{cache_attrs}}{If True (default), user attributes will be cached. If False, attributes will be reloaded prior to all data access and modification.}

\item{\code{write_empty_chunks}}{If True, all chunks will be stored regardless of their contents. If False (default), each chunk is compared to the array's fill value prior to storing. If a chunk is uniformly equal to the fill value, then that chunk is not be stored, and the store entry for that chunk's key is deleted.}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-Array-new}{\code{Array$new()}}
\item \href{#method-Array-get_store}{\code{Array$get_store()}}
\item \href{#method-Array-get_path}{\code{Array$get_path()}}
\item \href{#method-Array-get_name}{\code{Array$get_name()}}
\item \href{#method-Array-get_basename}{\code{Array$get_basename()}}
\item \href{#method-Array-get_read_only}{\code{Array$get_read_only()}}
\item \href{#method-Array-set_read_only}{\code{Array$set_read_only()}}
\item \href{#method-Array-get_chunk_store}{\code{Array$get_chunk_store()}}
\item \href{#method-Array-get_shape}{\code{Array$get_shape()}}
\item \href{#method-Array-set_shape}{\code{Array$set_shape()}}
\item \href{#method-Array-resize}{\code{Array$resize()}}
\item \href{#method-Array-get_chunks}{\code{Array$get_chunks()}}
\item \href{#method-Array-get_dtype}{\code{Array$get_dtype()}}
\item \href{#method-Array-get_compressor}{\code{Array$get_compressor()}}
\item \href{#method-Array-get_fill_value}{\code{Array$get_fill_value()}}
\item \href{#method-Array-set_fill_value}{\code{Array$set_fill_value()}}
\item \href{#method-Array-get_order}{\code{Array$get_order()}}
\item \href{#method-Array-get_filters}{\code{Array$get_filters()}}
\item \href{#method-Array-get_synchronizer}{\code{Array$get_synchronizer()}}
\item \href{#method-Array-get_attrs}{\code{Array$get_attrs()}}
\item \href{#method-Array-get_ndim}{\code{Array$get_ndim()}}
\item \href{#method-Array-get_size}{\code{Array$get_size()}}
\item \href{#method-Array-get_itemsize}{\code{Array$get_itemsize()}}
\item \href{#method-Array-get_nbytes}{\code{Array$get_nbytes()}}
\item \href{#method-Array-get_nbytes_stored}{\code{Array$get_nbytes_stored()}}
\item \href{#method-Array-get_cdata_shape}{\code{Array$get_cdata_shape()}}
\item \href{#method-Array-get_nchunks}{\code{Array$get_nchunks()}}
\item \href{#method-Array-get_nchunks_initialized}{\code{Array$get_nchunks_initialized()}}
\item \href{#method-Array-get_is_view}{\code{Array$get_is_view()}}
\item \href{#method-Array-get_oindex}{\code{Array$get_oindex()}}
\item \href{#method-Array-get_vindex}{\code{Array$get_vindex()}}
\item \href{#method-Array-get_write_empty_chunks}{\code{Array$get_write_empty_chunks()}}
\item \href{#method-Array-equals}{\code{Array$equals()}}
\item \href{#method-Array-islice}{\code{Array$islice()}}
\item \href{#method-Array-length}{\code{Array$length()}}
\item \href{#method-Array-get_item}{\code{Array$get_item()}}
\item \href{#method-Array-get_basic_selection}{\code{Array$get_basic_selection()}}
\item \href{#method-Array-get_orthogonal_selection}{\code{Array$get_orthogonal_selection()}}
\item \href{#method-Array-get_coordinate_selection}{\code{Array$get_coordinate_selection()}}
\item \href{#method-Array-get_mask_selection}{\code{Array$get_mask_selection()}}
\item \href{#method-Array-set_item}{\code{Array$set_item()}}
\item \href{#method-Array-set_basic_selection}{\code{Array$set_basic_selection()}}
\item \href{#method-Array-set_orthogonal_selection}{\code{Array$set_orthogonal_selection()}}
\item \href{#method-Array-set_coordinate_selection}{\code{Array$set_coordinate_selection()}}
\item \href{#method-Array-set_mask_selection}{\code{Array$set_mask_selection()}}
\item \href{#method-Array-get_info}{\code{Array$get_info()}}
\item \href{#method-Array-get_digest}{\code{Array$get_digest()}}
\item \href{#method-Array-get_hexdigest}{\code{Array$get_hexdigest()}}
\item \href{#method-Array-append}{\code{Array$append()}}
\item \href{#method-Array-view}{\code{Array$view()}}
\item \href{#method-Array-astype}{\code{Array$astype()}}
\item \href{#method-Array-clone}{\code{Array$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Array-new"></a>}}
\if{latex}{\out{\hypertarget{method-Array-new}{}}}
\subsection{Method \code{new()}}{
(Re)load metadata from store.


Create a new Array instance.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Array$new(
  store,
  path = NA,
  read_only = FALSE,
  chunk_store = NA,
  synchronizer = NA,
  cache_metadata = TRUE,
  cache_attrs = TRUE,
  write_empty_chunks = TRUE
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{store}}{Array store, already initialized.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
An \code{Array} instance.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Array-get_store"></a>}}
\if{latex}{\out{\hypertarget{method-Array-get_store}{}}}
\subsection{Method \code{get_store()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Array$get_store()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Array-get_path"></a>}}
\if{latex}{\out{\hypertarget{method-Array-get_path}{}}}
\subsection{Method \code{get_path()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Array$get_path()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Array-get_name"></a>}}
\if{latex}{\out{\hypertarget{method-Array-get_name}{}}}
\subsection{Method \code{get_name()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Array$get_name()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Array-get_basename"></a>}}
\if{latex}{\out{\hypertarget{method-Array-get_basename}{}}}
\subsection{Method \code{get_basename()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Array$get_basename()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Array-get_read_only"></a>}}
\if{latex}{\out{\hypertarget{method-Array-get_read_only}{}}}
\subsection{Method \code{get_read_only()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Array$get_read_only()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Array-set_read_only"></a>}}
\if{latex}{\out{\hypertarget{method-Array-set_read_only}{}}}
\subsection{Method \code{set_read_only()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Array$set_read_only(val)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Array-get_chunk_store"></a>}}
\if{latex}{\out{\hypertarget{method-Array-get_chunk_store}{}}}
\subsection{Method \code{get_chunk_store()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Array$get_chunk_store()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Array-get_shape"></a>}}
\if{latex}{\out{\hypertarget{method-Array-get_shape}{}}}
\subsection{Method \code{get_shape()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Array$get_shape()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Array-set_shape"></a>}}
\if{latex}{\out{\hypertarget{method-Array-set_shape}{}}}
\subsection{Method \code{set_shape()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Array$set_shape(value)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Array-resize"></a>}}
\if{latex}{\out{\hypertarget{method-Array-resize}{}}}
\subsection{Method \code{resize()}}{
Change the shape of the array by growing or shrinking one or more dimensions.
Subset the array.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Array$resize(...)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Array-get_chunks"></a>}}
\if{latex}{\out{\hypertarget{method-Array-get_chunks}{}}}
\subsection{Method \code{get_chunks()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Array$get_chunks()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Array-get_dtype"></a>}}
\if{latex}{\out{\hypertarget{method-Array-get_dtype}{}}}
\subsection{Method \code{get_dtype()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Array$get_dtype()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Array-get_compressor"></a>}}
\if{latex}{\out{\hypertarget{method-Array-get_compressor}{}}}
\subsection{Method \code{get_compressor()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Array$get_compressor()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Array-get_fill_value"></a>}}
\if{latex}{\out{\hypertarget{method-Array-get_fill_value}{}}}
\subsection{Method \code{get_fill_value()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Array$get_fill_value()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Array-set_fill_value"></a>}}
\if{latex}{\out{\hypertarget{method-Array-set_fill_value}{}}}
\subsection{Method \code{set_fill_value()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Array$set_fill_value(val)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Array-get_order"></a>}}
\if{latex}{\out{\hypertarget{method-Array-get_order}{}}}
\subsection{Method \code{get_order()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Array$get_order()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Array-get_filters"></a>}}
\if{latex}{\out{\hypertarget{method-Array-get_filters}{}}}
\subsection{Method \code{get_filters()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Array$get_filters()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Array-get_synchronizer"></a>}}
\if{latex}{\out{\hypertarget{method-Array-get_synchronizer}{}}}
\subsection{Method \code{get_synchronizer()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Array$get_synchronizer()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Array-get_attrs"></a>}}
\if{latex}{\out{\hypertarget{method-Array-get_attrs}{}}}
\subsection{Method \code{get_attrs()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Array$get_attrs()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Array-get_ndim"></a>}}
\if{latex}{\out{\hypertarget{method-Array-get_ndim}{}}}
\subsection{Method \code{get_ndim()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Array$get_ndim()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Array-get_size"></a>}}
\if{latex}{\out{\hypertarget{method-Array-get_size}{}}}
\subsection{Method \code{get_size()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Array$get_size()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Array-get_itemsize"></a>}}
\if{latex}{\out{\hypertarget{method-Array-get_itemsize}{}}}
\subsection{Method \code{get_itemsize()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Array$get_itemsize()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Array-get_nbytes"></a>}}
\if{latex}{\out{\hypertarget{method-Array-get_nbytes}{}}}
\subsection{Method \code{get_nbytes()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Array$get_nbytes()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Array-get_nbytes_stored"></a>}}
\if{latex}{\out{\hypertarget{method-Array-get_nbytes_stored}{}}}
\subsection{Method \code{get_nbytes_stored()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Array$get_nbytes_stored()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Array-get_cdata_shape"></a>}}
\if{latex}{\out{\hypertarget{method-Array-get_cdata_shape}{}}}
\subsection{Method \code{get_cdata_shape()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Array$get_cdata_shape()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Array-get_nchunks"></a>}}
\if{latex}{\out{\hypertarget{method-Array-get_nchunks}{}}}
\subsection{Method \code{get_nchunks()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Array$get_nchunks()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Array-get_nchunks_initialized"></a>}}
\if{latex}{\out{\hypertarget{method-Array-get_nchunks_initialized}{}}}
\subsection{Method \code{get_nchunks_initialized()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Array$get_nchunks_initialized()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Array-get_is_view"></a>}}
\if{latex}{\out{\hypertarget{method-Array-get_is_view}{}}}
\subsection{Method \code{get_is_view()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Array$get_is_view()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Array-get_oindex"></a>}}
\if{latex}{\out{\hypertarget{method-Array-get_oindex}{}}}
\subsection{Method \code{get_oindex()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Array$get_oindex()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Array-get_vindex"></a>}}
\if{latex}{\out{\hypertarget{method-Array-get_vindex}{}}}
\subsection{Method \code{get_vindex()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Array$get_vindex()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Array-get_write_empty_chunks"></a>}}
\if{latex}{\out{\hypertarget{method-Array-get_write_empty_chunks}{}}}
\subsection{Method \code{get_write_empty_chunks()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Array$get_write_empty_chunks()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Array-equals"></a>}}
\if{latex}{\out{\hypertarget{method-Array-equals}{}}}
\subsection{Method \code{equals()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Array$equals(other)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Array-islice"></a>}}
\if{latex}{\out{\hypertarget{method-Array-islice}{}}}
\subsection{Method \code{islice()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Array$islice(start = NA, end = NA)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Array-length"></a>}}
\if{latex}{\out{\hypertarget{method-Array-length}{}}}
\subsection{Method \code{length()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Array$length()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Array-get_item"></a>}}
\if{latex}{\out{\hypertarget{method-Array-get_item}{}}}
\subsection{Method \code{get_item()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Array$get_item(selection)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{selection}}{Selections are lists containing either scalars, strings, or Slice objects.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Array-get_basic_selection"></a>}}
\if{latex}{\out{\hypertarget{method-Array-get_basic_selection}{}}}
\subsection{Method \code{get_basic_selection()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Array$get_basic_selection(selection = NA, out = NA, fields = NA)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Array-get_orthogonal_selection"></a>}}
\if{latex}{\out{\hypertarget{method-Array-get_orthogonal_selection}{}}}
\subsection{Method \code{get_orthogonal_selection()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Array$get_orthogonal_selection(selection = NA, out = NA, fields = NA)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Array-get_coordinate_selection"></a>}}
\if{latex}{\out{\hypertarget{method-Array-get_coordinate_selection}{}}}
\subsection{Method \code{get_coordinate_selection()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Array$get_coordinate_selection(selection = NA, out = NA, fields = NA)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Array-get_mask_selection"></a>}}
\if{latex}{\out{\hypertarget{method-Array-get_mask_selection}{}}}
\subsection{Method \code{get_mask_selection()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Array$get_mask_selection(selection = NA, out = NA, fields = NA)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Array-set_item"></a>}}
\if{latex}{\out{\hypertarget{method-Array-set_item}{}}}
\subsection{Method \code{set_item()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Array$set_item(selection, value)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{selection}}{Selections are lists containing either scalars, strings, or Slice objects.}

\item{\code{value}}{The value to set, as an R array() or a Zarr NestedArray instance.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Array-set_basic_selection"></a>}}
\if{latex}{\out{\hypertarget{method-Array-set_basic_selection}{}}}
\subsection{Method \code{set_basic_selection()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Array$set_basic_selection(selection, value, fields = NA)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Array-set_orthogonal_selection"></a>}}
\if{latex}{\out{\hypertarget{method-Array-set_orthogonal_selection}{}}}
\subsection{Method \code{set_orthogonal_selection()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Array$set_orthogonal_selection(selection, value, fields = NA)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Array-set_coordinate_selection"></a>}}
\if{latex}{\out{\hypertarget{method-Array-set_coordinate_selection}{}}}
\subsection{Method \code{set_coordinate_selection()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Array$set_coordinate_selection(selection, value, fields = NA)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Array-set_mask_selection"></a>}}
\if{latex}{\out{\hypertarget{method-Array-set_mask_selection}{}}}
\subsection{Method \code{set_mask_selection()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Array$set_mask_selection(selection, value, fields = NA)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Array-get_info"></a>}}
\if{latex}{\out{\hypertarget{method-Array-get_info}{}}}
\subsection{Method \code{get_info()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Array$get_info()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Array-get_digest"></a>}}
\if{latex}{\out{\hypertarget{method-Array-get_digest}{}}}
\subsection{Method \code{get_digest()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Array$get_digest(hashname = "sha1")}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Array-get_hexdigest"></a>}}
\if{latex}{\out{\hypertarget{method-Array-get_hexdigest}{}}}
\subsection{Method \code{get_hexdigest()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Array$get_hexdigest(hashname = "sha1")}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Array-append"></a>}}
\if{latex}{\out{\hypertarget{method-Array-append}{}}}
\subsection{Method \code{append()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Array$append(data, axis = 0)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Array-view"></a>}}
\if{latex}{\out{\hypertarget{method-Array-view}{}}}
\subsection{Method \code{view()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Array$view(
  shape = NA,
  chunks = NA,
  dtype = NA,
  fill_value = NA,
  filters = NA,
  read_only = NA,
  synchronizer = NA
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Array-astype"></a>}}
\if{latex}{\out{\hypertarget{method-Array-astype}{}}}
\subsection{Method \code{astype()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Array$astype(dtype)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Array-clone"></a>}}
\if{latex}{\out{\hypertarget{method-Array-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Array$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
